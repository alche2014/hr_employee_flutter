name: hr_app
description: A new Flutter project.

publish_to: 'none' # Remove this line if you wish to publish to pub.dev

version: 1.0.0+1

environment:
  sdk: ">=2.13.4 <3.0.0"
  # sdk: ">=2.8.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.3
  google_fonts:
  percent_indicator: ^3.0.1
  mask_text_input_formatter: ^2.0.0
  # stop_watch_timer: ^1.3.1
  rxdart:
  image_cropper: ^1.0.2
  flutter_picker: ^2.0.2
  firebase_core: ^1.8.0
  firebase_messaging: ^10.0.9
  splashscreen: ^1.2.0

  # flutter_local_notifications: 1.1.0
  # google_map_location_picker:``
  # google_map_polyline:
  google_maps_flutter: 
  geocoder: ^0.2.1
  flushbar:
    git:
      url: https://github.com/valterh4ck3r/flushbar.git
  google_sign_in:
  photo_view: ^0.13.0
  firebase_storage: ^8.0.0
  fancy_bottom_navigation: ^0.3.2
  # firebase_auth: ^0.11.1+8
  cloud_firestore: ^3.0.0
  flutter_signin_button: ^2.0.0
  schedule_controller: ^0.1.3+1
  # file_picker: ^1.1.1
  fluttertoast: ^8.0.8
  firebase_dynamic_links: 
  url_launcher:
  # flutter_quill:
  # flutter_svg:
  flutter_circular_chart: ^0.1.0
  # firebase_messaging: 10.0.8
  # cloud_functions:
  dio: ^4.0.1
  flutter_masked_text: ^0.8.0
  path_provider: ^2.0.0
  country_code_picker:
  multi_image_picker: ^4.8.01
  http:
  timeago: ^3.1.0
  # linkedin_login:
  connectivity:
  flutter_offline: ^2.0.0
  # firebase_ml_vision: ^0.12.0+3
  # firebase_ml_vision: ^0.9.10
  pigeon:
  # camera:
  # permission_handler: ^8.2.5
  # google_map_location_picker:
  # google_map_location_picker: ^3.3.4
  ext_storage: ^1.0.3
  firebase_auth:
  open_file:
  shimmer:
  # intl: ^0.16.1
  flutter_facebook_login: ^3.0.0
  file_picker:
  image_picker: ^0.8.2
  geolocator: ^7.7.0
  # webview_flutter:
  month_picker_dialog: ^0.4.0
  # cached_network_image: ^3.1.0
  shared_preferences:
  flutter_spinkit:
  cached_network_image: ^3.1.0
  smooth_page_indicator: ^1.0.0+2
  progress_dialog:
    git:
      url: https://github.com/mostafaAbdelazim/progress_dialog.git
  hexcolor: ^2.0.1
  # intl: ^0.16.1
  # cached_network_image: ^2.2.0+1
  # firebase_core: ^0.4.0+9
  # firebase_auth: ^0.14.0+5 
  # cloud_firestore: ^0.12.9+5
  flutter_dotenv: ^5.0.2
  provider: ^6.0.1
  flutter_local_notifications: ^9.0.2
  # http: ^0.12.1
  # shared_preferences: ^0.5.7+3
  # image_picker: ^0.6.7+4
  keyboard_visibility: ^0.5.6
  flutter_typeahead: ^3.2.1
  # connectivity: ^0.4.2  
    # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  flutter_statusbarcolor: ^0.2.3
  simple_animations:
  cloud_functions: ^3.0.6
  audioplayers: 
  # file_picker: ^1.13.3
  video_player:
  json_annotation: 
  intl: 0.17.0
  
# dependency_overrides:
#   intl: 0.17.0
dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner:
  json_serializable: 
  flutter_native_splash:

  flutter_lints: ^1.0.0


# The following section is specific to Flutter.
flutter:
  uses-material-design: true
  fonts:
    - family: Sofia
      fonts:
        - asset: assets/fonts/sofiapro-light.otf

  # To add assets to your application, add an assets section, like this:
  assets:
     - assets/
     - assets/custom/
     
flutter_native_splash:

  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#e1f5fe"
  #background_image: "assets/background.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: assets/logo_lockup_flutter_vertical.png

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  image_dark: assets/logo_lockup_flutter_vertical_wht.png

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'

  # To enable support for Android 12, set the following parameter to true.  Defaults to false.
  #android12: true
